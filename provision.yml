---
- hosts: localhost
  connection: localhost
  gather_facts: true
  become: true
  vars:
    devops_tools:
      - { name: direnv, version: 2.30.3 }
      - { name: docker-compose-v1, version: 1.29.2 }
      - { name: helm, version: 3.8.0 }
      - { name: kubectl, version: 1.23.3 }
      - { name: gohugo, version: 0.92.1 }
      - { name: hadolint, version: v2.8.0 }
      - { name: jq, version: 1.6 }
      - { name: k9s, version: 0.25.18 }
      - { name: kind, version: 0.11.1 }
      - { name: krew, version: 0.4.3 }
      - { name: kubectx, version: 0.9.4 }
      - { name: kustomize, version: 4.5.2 }
      - { name: minikube, version: 1.25.1 }
      - { name: popeye, version: v0.9.8 }
      - { name: polaris, version: 5.0.0 }
      - { name: tekton-cli, version: 0.22.0 }
      - { name: tfsec, version: 1.1.4 }
      - { name: tflint, version: 0.34.1 }
      - { name: trivy, version: 0.23.0 }
      - { name: yq, version: 4.19.1 }

  tasks:
    - name: Check swap State
      ansible.builtin.stat:
        path: /swapfile
      register: swap_file_check
    - name: Umount swap | {{ inventory_hostname }}
      ansible.posix.mount:
        name: swap
        fstype: swap
        state: absent
      when: swap_file_check.stat.exists
    - name: Swap Off | {{ inventory_hostname }}
      ansible.builtin.shell:
        cmd: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Add Docker GPG key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
    - name: Add Hashicorp GPG key
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
        state: present
        update_cache: false
    - name: Add Hashicorp repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
        state: present
        update_cache: false
    - name: Install Packages
      ansible.builtin.apt:
        name:
          - qemu-kvm
          - libvirt-daemon-system
          - vagrant
          - terraform
          - nomad
          - vault
          - docker-ce
          - ksmtuned
          - packer
          - zsh
          - libvirt-clients
          - libxslt-dev
          - libxml2-dev
          - libvirt-dev
          - zlib1g-dev
          - ruby-dev
          - ruby-libvirt
          - ebtables
          - keyboard-configuration
          - console-setup
          - language-pack-fr
        update_cache: true
      tags: packages
    - name: Change local to FR
      community.general.locale_gen:
        name: fr_FR.UTF-8
        state: present
      tags: local
    - name: configure keyboard
      ansible.builtin.copy:
        src: "files/{{ item }}"
        dest: "/etc/default/{{ item }}"
        force: yes
        owner: root
        group: root
        mode: 0640
      loop:
        - keyboard
        - locale
      notify:
        - dpkg-reconfigure
      tags: keyboard
    - name: Add user to groups
      ansible.builtin.user:
        shell: /usr/bin/zsh
        name: "{{ ansible_user_id }}"
        groups: docker,libvirt
        append: yes
    - name: Get arkade
      ansible.builtin.shell: curl -SLfs https://get.arkade.dev | sudo sh
      become: false
    - name: Check swap State
      ansible.builtin.stat:
        path: "/home/{{ ansible_user_id }}/.oh-my-zsh"
      register: ohmyzsh_file_check
    - name: Get Oh my zsh
      become: false
      ansible.builtin.shell: curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh
      tags: zsh
      when: not ohmyzsh_file_check.stat.exists
    - name: uncomment PATH
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user_id }}/.zshrc"
        regexp: '^# export PATH.*$'
        line: 'export PATH=$HOME/.arkade/bin:$HOME/.local/bin:$PATH'
      become: false
      tags: path
    - name: add PATH
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user_id }}/.zshrc"
        state: present
        regexp: '^# export (PATH=\")({{ item }}:)?((?(2).*?(?!(?:.\"))|.*?(?!(?:{{ item }}))))(:{{ item }})?((?(4).*|\"))'
        line: '\1\3:{{ item }}\5'
        backrefs: yes
      loop:
        - "$HOME/.arkade/bin"
        - "$HOME/.local/bin"
      tags: path
      become: false
    - name: Install pip packages
      ansible.builtin.pip:
        requirements: "/home/{{ ansible_user_id }}/my-vagrant-box/requirements.yml"
      become: false
      tags: pip
    - name: Install vagrant plugin libvirt
      ansible.builtin.shell: vagrant plugin install vagrant-libvirt
      become: false
      tags: vagrant
    - name: Install regula
      ansible.builtin.shell: wget https://github.com/fugue/regula/releases/download/v2.2.0/regula_2.2.0_Linux_x86_64.tar.gz -O - | sudo tar -xz -C /usr/local/bin
      tags: regula
    - name: install Azure cli
      ansible.builtin.shell: curl -sL https://aka.ms/InstallAzureCLIDeb | bash
    - name: Install asdf
      ansible.builtin.git:
        repo: 'https://github.com/asdf-vm/asdf.git'
        dest: "/home/{{ ansible_user_id }}/.asdf"
        version: v0.9.0
      tags: asdf
    - name: Add asdf to .zshrc
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user_id }}/.zshrc"
        regexp: '^. $HOME/.asdf/asdf.sh$'
        line: '. $HOME/.asdf/asdf.sh'
      tags: asdf
    - name: Add plugin asdf
      ansible.builtin.shell: "asdf plugin add {{ item.name }} || true"
      with_items: "{{ devops_tools }}"
      become: false
      tags: asdf
    - name: Install Tools with asdf
      ansible.builtin.shell: "asdf install {{ item.name }} {{ item.version }}"
      with_items: "{{ devops_tools }}"
      become: false
      tags: asdf
    - name: Define global version asdf
      ansible.builtin.shell: "asdf global {{ item.name }} {{ item.version }}"
      with_items: "{{ devops_tools }}"
      become: false
      tags: asdf
  handlers:
    - name: dpkg-reconfigure
      shell: |
        dpkg-reconfigure -f noninteractive keyboard-configuration && \
        localectl set-locale LANG=fr_FR.UTF8 LANGUAGE=fr_FR.UTF8 && \
        timedatectl set-timezone Europe/Paris && \
        update-locale LANG=fr_FR.UTF-8

